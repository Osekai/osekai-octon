// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Osekai.Octon.Persistence.EntityFramework;
using Osekai.Octon.Persistence.EntityFramework.MySql;

#nullable disable

namespace Osekai.Octon.Persistence.EntityFramework.MySql.Migrations
{
    [DbContext(typeof(MySqlOsekaiDbContext))]
    [Migration("20221226133152_AddCacheEntries")]
    partial class AddCacheEntries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Experimental")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SimpleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .UseCollation("ascii_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("SimpleName"), "ascii");

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Apps", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.AppTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .UseCollation("ascii_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Color"), "ascii");

                    b.Property<string>("DarkColor")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .UseCollation("ascii_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("DarkColor"), "ascii");

                    b.Property<float>("DarkHslValueMultiplier")
                        .HasColumnType("float");

                    b.Property<bool>("HasCover")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("HslValueMultiplier")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppId")
                        .IsUnique();

                    b.HasIndex(new[] { "AppId" }, "fk_AppId_idx");

                    b.ToTable("AppThemes", (string)null);
                });

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.CacheEntry", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .UseCollation("ascii_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "ascii");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("blob");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Name");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CacheEntries", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.HomeFaq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocalizationPrefix")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .UseCollation("ascii_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LocalizationPrefix"), "ascii");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("tinytext");

                    b.HasKey("Id");

                    b.ToTable("HomeFaqs", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.Session", b =>
                {
                    b.Property<string>("Token")
                        .HasMaxLength(32)
                        .HasColumnType("char")
                        .UseCollation("ascii_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Token"), "ascii");

                    b.Property<DateTime>("ExpiresAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Token");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("Sessions", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.AppTheme", b =>
                {
                    b.HasOne("Osekai.Octon.Persistence.Models.App", "App")
                        .WithOne("AppTheme")
                        .HasForeignKey("Osekai.Octon.Persistence.Models.AppTheme", "AppId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("fk_AppId");

                    b.Navigation("App");
                });

            modelBuilder.Entity("Osekai.Octon.Persistence.Models.App", b =>
                {
                    b.Navigation("AppTheme");
                });
#pragma warning restore 612, 618
        }
    }
}
